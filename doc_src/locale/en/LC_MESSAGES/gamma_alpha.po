# 
msgid ""
msgstr ""
"Project-Id-Version: B4W 14.02.28\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-03-18 17:57\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../gamma_alpha.rst:5
msgid "Гамма-коррекция и альфа-композитинг"
msgstr "Gamma and Alpha"

#: ../gamma_alpha.rst:8
msgid "Общее описание"
msgstr "Gamma Overview"

#: ../gamma_alpha.rst:10
msgid ""
"Сущность гамма-коррекции заключается в упаковке яркости канала изображения в"
" 8 битах информации."
msgstr ""
"The essence of gamma correction is packing the image brightness channel into"
" 8 bits of information."

#: ../gamma_alpha.rst:13
msgid ""
"Стандартные (не HDR) изображения всегда сохраняются в нелинейном "
"пространстве, где тёмные компоненты кодируются большим числом битов чем "
"светлые. Это означает, что значению 0.5 от реальной интенсивности света "
"(физической величины, называемой освещённость) будет соответствовать большее"
" значение, содержащееся в каналах RGB (в самом простом случае "
":math:`0.5^{1/2.2} = 0.73)`."
msgstr ""
"Standard (non-HDR) images are always stored in non-linear color space where "
"the darker components are encoded using more bits than the brighter ones. "
"That means that a bigger RGB value corresponds to 0.5 of the real light "
"intensity (a physical quantity called illuminance) - in a simplest case this"
" value equals to 0.5 ^ (1/2.2) = 0.73."

#: ../gamma_alpha.rst:15
msgid ""
"В противном случае 8 бит информации не достаточно для кодирования "
"интенсивности света, что приведёт к тому, что тёмные тона будут отображаться"
" некорректно (например, тёмный градиент будет иметь ступенчатый характер "
"переходов между соседними цветами)."
msgstr ""
"Overwise, 8 bit of information will not be enough to encode the light "
"intensity. This will result in incorrect rendering of darker tones. For "
"example, dark gradients will look stepped."

#: ../gamma_alpha.rst:17
msgid ""
"Таким образом, веб-браузеры, как и многие другие программы для просмотра и "
"обработки изображений, работают в нелинейном цветовом пространстве. Однако "
"трёхмерные движки и рендереры работают в линейном пространстве, поскольку "
"только оно может адекватно представлять поведение света в реальном мире. "
"Например, освещённость от двух одинаковых ламп будет ровно в два раза "
"превышать освещённость только от одной."
msgstr ""
"Therefore, web browsers, as well as many other programs for viewing and "
"manipulating images, work in non-linear space. However, 3D engines and "
"renderers work in linear space, because it is the only correct way to "
"represent light behavior in the real world. For example, the illuminance "
"from two identical lamps exceeds the illuminance from one lamp exactly by "
"two times. "

#: ../gamma_alpha.rst:19
msgid ""
"Безусловно, в таком случае 8 бит информации не будет достаточно, что "
"наглядно иллюстрирует таблица, в которой приведены примерные значения "
"величин освещённости от реальных источников."
msgstr ""
"Undoubtedly, 8 bit of information will not be enough in this case. This can "
"be clearly seen from the table in which approximate illuminance values for "
"some real light sources are shown."

#: ../gamma_alpha.rst:22
msgid "Описание"
msgstr "Description"

#: ../gamma_alpha.rst:22
msgid "Освещённость, лк"
msgstr "Illuminance, lux"

#: ../gamma_alpha.rst:24
msgid "Летом в полдень"
msgstr "Summer noon"

#: ../gamma_alpha.rst:24
msgid "17 000"
msgstr ""

#: ../gamma_alpha.rst:26
msgid "Зимой в полдень"
msgstr "Winter noon"

#: ../gamma_alpha.rst:26
msgid "5 000"
msgstr ""

#: ../gamma_alpha.rst:28
msgid "В пасмурный день"
msgstr "Dull day"

#: ../gamma_alpha.rst:28
msgid "1 000"
msgstr ""

#: ../gamma_alpha.rst:30
msgid "В светлой комнате"
msgstr "In a light room"

#: ../gamma_alpha.rst:30
msgid "100"
msgstr ""

#: ../gamma_alpha.rst:32
msgid "Ночью в полнолуние"
msgstr "Full moon by night"

#: ../gamma_alpha.rst:32
msgid "0.2"
msgstr ""

#: ../gamma_alpha.rst:34
msgid "В безлунную ночь"
msgstr "Moonless light"

#: ../gamma_alpha.rst:34
msgid "0.001"
msgstr ""

#: ../gamma_alpha.rst:39
msgid ""
"Blender при настройке сцены ``Color Management > Display Device > sRGB`` "
"работает в линейном пространстве. Значения цветов материалов и настройки "
"источников света соответствует физическим величинам. При работе с "
"текстурами, за исключением карт нормалей необходимо выставить настройку "
"изображения ``Image > Input Color Space > sRGB``. В этом случае при "
"рендеринге будет производится автоматическая распаковка изображения: "
"sRGB->Linear."
msgstr ""
"When the ``Color Management > Display Device > sRGB`` option is enabled for "
"a scene, Blender works in a linear space. Material colors and lamp settings "
"correspond to physical values. For texture images (except normal maps) it is"
" required to select the ``Image > Input Color Space > sRGB`` option. In this"
" case an automatic image unpacking (sRGB -> Linear) is performed at the time"
" of rendering."

#: ../gamma_alpha.rst:44
msgid "Человеческое зрение и мониторы"
msgstr "Human Vision and Monitors"

#: ../gamma_alpha.rst:46
msgid ""
"Человеческое восприятие света нелинейно (человек лучше различает градации "
"тусклого света чем яркого), однако свет, поступающий в глаз, по-прежнему "
"должен подчиняться физическим законам (см. пример с лампочками)."
msgstr ""
"While the human vision is non-linear (a human recognizes the darker light "
"tints better than the brighter ones), the light coming into the eye still "
"obeys the physical laws (see the lamps example). "

#: ../gamma_alpha.rst:49
msgid ""
"Мониторы с электронно-лучевыми трубками (ЭЛТ) имеют нелинейную "
"характеристику яркости от приложенного к их входу электрического напряжения,"
" которое, в свою очередь, определяется значением канала цветности в "
"видеопамяти. Подобную же характеристику копируют жидкокристаллические "
"мониторы. Тем не менее свет, излучаемый такими мониторами, по-прежнему "
"должен подчиняться физическим законам. Например, в идеальном случае при "
"добавлении второго источника света на сцену в виртуальном мире, яркость "
"пикселей на экране монитора должна увеличиваться в два раза."
msgstr ""
"In CRT monitors the brightness is dependent non-linearly upon the electric "
"voltage applied to the monitor's input (the voltage itself is determined by "
"the color channel value in the video memory). LCD monitors mimic the same "
"characteristics. Nevertheless the light emitted by such monitors obeys the "
"physical laws. For example the addition of a second light source to a "
"virtual scene should cause the brightness to double (in the perfect case)."

#: ../gamma_alpha.rst:52
msgid ""
"Таким образом, особенности восприятия человеческого глаза являются причиной,"
" по которой стало возможным осуществлять упаковку каналов цветности, в то "
"время как технические характеристики мониторов имеют вторичное значение по "
"отношению к гамма-коррекции."
msgstr ""
"Therefore, the perception characteristics of the human eye are the reason "
"due to which it is possible to pack color channels. At the same time, the "
"technical characteristics of monitors have a secondary significance for "
"gamma correction."

#: ../gamma_alpha.rst:56
msgid "Гамма"
msgstr "Gamma Formula"

#: ../gamma_alpha.rst:58
msgid "Используется в следующей упрощенной формуле:"
msgstr "Used in the following simplified formula:"

#: ../gamma_alpha.rst:60
msgid "V\\ :sub:`out` = V\\ :sub:`in`\\ :sup:`γ`"
msgstr ""

#: ../gamma_alpha.rst:62
msgid ""
"γ < 1 - упаковывающая гамма, γ > 1 - распаковывающая гамма. В наиболее "
"простом случае используются значения 1/2.2 и 2.2 соответственно. Далее "
"вместо термина \"гамма-коррекция\" будут использованы термины \"упаковка\" "
"(Linear -> sRGB) и \"распаковка\" (sRGB -> Linear)."
msgstr ""
"γ < 1 - packing gamma, γ > 1 - unpacking gamma. In the simplest case 1/2.2 "
"and 2.2 values are used respectively. Hereinafter the \"packing\" (Linear ->"
" sRGB) and \"unpacking\" (sRGB -> Linear) terms are used instead of \"gamma "
"correction\"."

#: ../gamma_alpha.rst:74
msgid "Коррекция в нодовых материалах"
msgstr "Gamma in Node Materials"

#: ../gamma_alpha.rst:77
msgid "Ноды для окраски"
msgstr "Nodes for Colouring"

#: ../gamma_alpha.rst:79
msgid ""
"При использовании текстур и вертексных цветов для окраски (не в качестве "
"масок), необходима распаковка (sRGB -> Linear). Нода текстуры реализует "
"распаковку автоматически. Для вертексного цвета распаковку необходимо "
"осуществлять явно, с помощью специальной ноды `SRGB_TO_LINEAR`."
msgstr ""
"Unpacking (sRGB -> Linear) is required when textures and vertex colors are "
"used for colouring (not for masking). The texture node implements unpacking "
"automatically. For vertex colors the unpacking should be performed "
"explicitely with the `SRGB_TO_LINEAR` special node."

#: ../gamma_alpha.rst:83
msgid ""
"Отметим, что альфа-канал ноды текстуры коррекции не подвергается, его "
"значения находятся в линейном пространстве."
msgstr ""
"Note that the alpha channel of a texture node is not corrected. Its values "
"are in the linear space."

#: ../gamma_alpha.rst:86
msgid "Ноды для масок"
msgstr "Nodes for Masking"

#: ../gamma_alpha.rst:88
msgid ""
"Текстуры и вертексные цвета могут использоваться в качестве масок, т.е. для "
"смешения цветов или других математических операций. В таком случае в "
"преобразованиях нет необходимости."
msgstr ""
"Textures and vertex colors can be used as masks i.e. for mixing colors and "
"for other mathematical operations. In such a case no transformations are "
"required."

#: ../gamma_alpha.rst:91
msgid ""
"В случае текстуры, тем не менее, имеется нюанс: нода текстуры реализует "
"распаковку автоматически. Это приводит к необходимости дополнительного "
"преобразования обратно в нелинейное пространство, для чего используется нода"
" `LINEAR_TO_SRGB`."
msgstr ""
"In case of a texture however there is a nuance: a texture node implements "
"unpacking automatically. This results in necessity of the additional "
"transformation back to the non-linear space, for which the `LINEAR_TO_SRGB` "
"node is used."

#: ../gamma_alpha.rst:96
msgid "Карты нормалей"
msgstr "Normal Maps"

#: ../gamma_alpha.rst:98
msgid ""
"При использовании карт нормалей никакие преобразования не производятся."
msgstr "No transformations are performed for normal maps. "

#: ../gamma_alpha.rst:102
msgid "Сводная таблица коррекции в нодовых материалах"
msgstr "Summary Table"

#: ../gamma_alpha.rst:106
msgid "Случай использования"
msgstr "Use case"

#: ../gamma_alpha.rst:106
msgid "Коррекция"
msgstr "Correction"

#: ../gamma_alpha.rst:108
msgid ""
"реализуется автоматически в ноде текстуры (альфа-канал коррекции не "
"подвергается)"
msgstr ""
"implemented automatically in the texture node (the alpha channel is not "
"corrected)"

#: ../gamma_alpha.rst:108
msgid "Текстура для окраски"
msgstr "Texture for colouring"

#: ../gamma_alpha.rst:113
msgid "Текстура для маски"
msgstr "Texture for masking"

#: ../gamma_alpha.rst:113
msgid "LINEAR_TO_SRGB"
msgstr ""

#: ../gamma_alpha.rst:115
msgid "Вертексный цвет для окраски"
msgstr "Vertex color for colouring"

#: ../gamma_alpha.rst:115
msgid "SRGB_TO_LINEAR"
msgstr ""

#: ../gamma_alpha.rst:117 ../gamma_alpha.rst:119
msgid "не требуется"
msgstr "not required"

#: ../gamma_alpha.rst:117
msgid "Вертексный цвет для маски"
msgstr "Vertex color for masking"

#: ../gamma_alpha.rst:119
msgid "Карта нормалей"
msgstr "Normal map"

#: ../gamma_alpha.rst:123
msgid ":ref:`node_gamma`"
msgstr ""

#: ../gamma_alpha.rst:129
msgid "Альфа-композитинг"
msgstr "Alpha Compositing"

#: ../gamma_alpha.rst:132
msgid "Общие сведения"
msgstr "Overview"

#: ../gamma_alpha.rst:134
msgid ""
"Физически корректный альфа-композитинг осуществляется по формуле [`источник "
"<http://wwwnew.cs.princeton.edu/courses/archive/spring05/cos426/papers/smith95a.pdf>`_]:"
msgstr ""
"Physically correct alpha compositing is performed according to the formula "
"[`source "
"<http://wwwnew.cs.princeton.edu/courses/archive/spring05/cos426/papers/smith95a.pdf>`_]:"

#: ../gamma_alpha.rst:136
msgid ":math:`C_o = C_a \\alpha_a + C_b \\alpha_b (1 - \\alpha_a)`."
msgstr ""

#: ../gamma_alpha.rst:138
msgid ""
"Формула отличается от классической операции смешивания (mix, выпуклая "
"комбинация) наличием множителя :math:`\\alpha_b` во втором слагаемом. Таким "
"образом, для осуществления альфа-композитинга должно быть известно не только"
" значение :math:`\\alpha_a` пикселя-источника, но и значение "
":math:`\\alpha_b` пикселя, поверх которого осуществляется рендеринг."
msgstr ""
"This formula differs from the classic mix operation (aka convex combination)"
" because it has the :math:`\\alpha_b` multiplier in the second summand. "
"Therefore not only the :math:`\\alpha_a` value of the source pixel should be"
" known for alpha compositing, but also the :math:`\\alpha_b` value of the "
"pixel over which the rendering is performed."

#: ../gamma_alpha.rst:140
msgid ""
"В случае предварительного умножения значений :math:`\\alpha` на цветовые "
"каналы (т.н. premultiplied alpha) формула принимает вид:"
msgstr ""
"In case of preliminary multiplication of the :math:`\\alpha` values by the "
"color channels (so called premultiplied alpha) the formula becomes as "
"following: "

#: ../gamma_alpha.rst:143
msgid ":math:`C_o = C_a + C_b (1 - \\alpha_a)`."
msgstr ""

#: ../gamma_alpha.rst:145
msgid ""
"Последняя формула используется также для расчёта результирующего значения "
":math:`\\alpha_o`:"
msgstr ""
"The last formula is used also to calculate the resulting :math:`\\alpha_o` "
"value:"

#: ../gamma_alpha.rst:147
msgid ":math:`\\alpha_o = \\alpha_a + \\alpha_b (1 - \\alpha_a)`."
msgstr ""

#: ../gamma_alpha.rst:149
msgid ""
"Предварительное умножение цветовых каналов на значения :math:`\\alpha` "
"позволяет сэкономить две операции умножения. Еще более существенным является"
" тот факт, что полученная формула может использоваться многократно, без "
"необходимости деления цвета :math:`C_o` на значение :math:`\\alpha_o` на "
"каждой последующей итерации."
msgstr ""
"Preliminary multiplication of the color channels by the :math:`\\alpha` "
"values allows to save two multiplication operations. The more significant "
"thing is that the derived formula can be used repeatedly without the need to"
" divide the :math:`C_o` color by the :math:`\\alpha_o` value on each "
"consequent iteration."

#: ../gamma_alpha.rst:153
msgid "Реализация"
msgstr "Implementation"

#: ../gamma_alpha.rst:155
msgid "Функция смешивания в движке Blend4Web имеет вид:"
msgstr "The blending function used in Blend4Web is the following:"

#: ../gamma_alpha.rst:161
msgid ""
"Инициализация контекста WebGL производится с параметром `premultipliedAlpha "
"= true` (что является значением по умолчанию). Кроме того, на выходе "
"шейдеров производится умножение всех каналов цветности на значение "
":math:`\\alpha`."
msgstr ""
"WebGL context initialization is performed using the `premultipliedAlpha = "
"true` parameter (that is the default value). Also multiplication of all the "
"color channels by the :math:`\\alpha` value is performed on the output of "
"the shaders."
