# 
msgid ""
msgstr ""
"Project-Id-Version: B4W 14.02.28\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-03-18 17:57\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../git_short_manual.rst:1 ../git_short_manual.rst:46
#: ../git_short_manual.rst:64 ../git_short_manual.rst:108
#: ../git_short_manual.rst:171 ../git_short_manual.rst:241
#: ../git_short_manual.rst:286 ../git_short_manual.rst:411
#: ../git_short_manual.rst:541
msgid "git"
msgstr ""

#: ../git_short_manual.rst:7
msgid "Работа в команде с использованием Git"
msgstr "Team Work. Using Git"

#: ../git_short_manual.rst:12 ../git_short_manual.rst:417
msgid "Общие сведения"
msgstr "Overview"

#: ../git_short_manual.rst:14
msgid ""
"Для организации командной работы над проектом может быть использована "
"система контроля версий файлов Git. Использование Git имеет ряд преимуществ "
"перед другими способами организации совместной работы:"
msgstr ""
"In order to organize team work a Git version control system can be used. "
"Using Git has a number of benifits as compared with other ways to "
"collaborate:"

#: ../git_short_manual.rst:16
msgid ""
"сохранение полной истории изменений файлов с возможностью возврата к "
"предыдущим версиям"
msgstr ""
"saving the history of changes with the possibility to roll back to prevoius "
"versions"

#: ../git_short_manual.rst:17
msgid ""
"синхронизация изменений между пользователями и автоматическое слияние "
"изменений"
msgstr "syncronizing changes between users and automatic merging of changes"

#: ../git_short_manual.rst:18
msgid "возможность работы с бинарными файлами большого объёма"
msgstr "working with large binary files is possible"

#: ../git_short_manual.rst:20
msgid ""
"Git - распределенная система, и каждый разработчик или дизайнер имеет "
"собственный локальный репозиторий (хранилище). Синхронизация между "
"локальными репозиториями может осуществляться через центральное \"общее\" "
"хранилище, которое можно разместить на специально выделенной для этой цели "
"машине (сервере). К серверу может быть организован доступ по протоколу SSH."
msgstr ""
"Git is a distributed system and every developer or designer has his own "
"local repository (storage). Syncing between the local repositories can be "
"performed via the central (\"shared\") storage, which can be located on a "
"dedicated machine (server). Access to the server can be organized through "
"SSH protocol."

#: ../git_short_manual.rst:22
msgid ""
"Хотя для Git существует множество графических утилит, упрощающих работу "
"начинающих пользователей, здесь мы рассмотрим работу со штатной консольной "
"утилитой, вызываемой командой ``git``."
msgstr ""
"Although there are many GUIs for Git beginners, here the work with the ``git`` standard console utility is explained."

#: ../git_short_manual.rst:28
msgid "Типичный рабочий процесс"
msgstr "Typical Workflow"

#: ../git_short_manual.rst:30
msgid ""
"В ходе работы в локальных репозиториях создаются, изменяются или удаляются "
"файлы."
msgstr ""
"Files can be created, added or deleted during the work process in the local "
"repositories."

#: ../git_short_manual.rst:31
msgid ""
"По завершении некоторого логического этапа работы возникает необходимость "
"фиксации изменений (коммит) и/или синхронизации с коллегами."
msgstr ""
"After a certain logical period of work is finished it is necessary to fix "
"(commit) the changes and/or syncronize with your team mates."

#: ../git_short_manual.rst:32
msgid ""
"Проводится подготовка файлов к коммиту - учет измененных, новых и удаленных "
"файлов, а также сброс изменений."
msgstr ""
"Files are prepared for commit i.e. the accounting of changed, new and "
"deleted files and also the resetting of changes."

#: ../git_short_manual.rst:33
msgid "Осуществляется коммит."
msgstr "Commit is performed."

#: ../git_short_manual.rst:34
msgid ""
"Локальные изменения загружаются в общее хранилище и становятся доступными "
"для коллег."
msgstr ""
"Local changes are uploaded into the shared storage and become available for "
"the collegues."

#: ../git_short_manual.rst:36
msgid ""
"Далее описывается ограниченный набор команд Git, рекомендуемых к "
"использованию при создании приложений и графических ресурсов."
msgstr ""
"A limited set of Git commands recommended for authoring applications and "
"their graphical resources is described below."

#: ../git_short_manual.rst:38
msgid "Перед выполнением команд необходимо перейти в репозиторий, например:"
msgstr ""
"It's necessary to switch to the repository before executing the commands, "
"e.g.:"

#: ../git_short_manual.rst:46
msgid "индивидуальные настройки"
msgstr "individual settings"

#: ../git_short_manual.rst:51
msgid "Индивидуальные настройки"
msgstr "Individual Settings"

#: ../git_short_manual.rst:53
msgid "Новый пользователь может устанавить имя и почтовый адрес командами:"
msgstr "A new user can set up his name and email using the commands:"

#: ../git_short_manual.rst:61
msgid "Установленные данные будут использоваться в логе изменений."
msgstr "The set up data will be used in the changelog."

#: ../git_short_manual.rst:64
msgid "проверка статуса"
msgstr "checking the status"

#: ../git_short_manual.rst:69
msgid "Проверка статуса"
msgstr "Checking the Status"

#: ../git_short_manual.rst:71
msgid ""
"Перед началом, в процессе или после выполнения любых операций рекомендуется "
"проверять текущее состояние репозитория."
msgstr ""
"It's recommended to check the state of the repository before, in progress "
"and after performing all the operations."

#: ../git_short_manual.rst:73
msgid "Проверить статус можно командой:"
msgstr "Use this command to check the status:"

#: ../git_short_manual.rst:80
msgid ""
"Результат команды ``git status``, если все коммиты проведены и нет новых "
"файлов:"
msgstr ""
"The result of the ``git status`` command if all the commits were performed "
"and there are no new files:"

#: ../git_short_manual.rst:89
msgid ""
"Возможный результат команды ``git status``, если имеются изменения. "
"Например, файлы :file:`apps_dev/firstperson/firstperson.js` и "
":file:`doc_src/git_short_manual.rst` изменены, и создан новый файл "
":file:`123.txt`:"
msgstr ""
"Possible result of ``git status`` if there are changes. For example the "
":file:`apps_dev/firstperson/firstperson.js` and "
":file:`doc_src/git_short_manual.rst` files are changed and a new file "
":file:`123.txt` is created:"

#: ../git_short_manual.rst:108
msgid "подготовка к коммиту"
msgstr "preparing for commit"

#: ../git_short_manual.rst:113
msgid "Перед коммитом"
msgstr "Before the Commit"

#: ../git_short_manual.rst:116
msgid "Проверка изменений (текстовых файлов)"
msgstr "Checking changes (of the text files)"

#: ../git_short_manual.rst:118
msgid ""
"Перед совершением коммита в случае текстовых файлов рекомендуется "
"просмотреть внесенные изменения."
msgstr ""
"In case of text files it is recommended to view the introduced changes "
"before performing the commit."

#: ../git_short_manual.rst:120
msgid "Проверить, что изменилось, во всей директории:"
msgstr "Check what was changed in the whole directory:"

#: ../git_short_manual.rst:126
msgid "или только в определенном файле:"
msgstr "or in a specific file only:"

#: ../git_short_manual.rst:132
msgid "Возможный результат команды ``git diff`` для текстового файла:"
msgstr "A possible result of the ``git diff`` command for a text file:"

#: ../git_short_manual.rst:151
msgid "Восстановление файлов"
msgstr "Rolling back files"

#: ../git_short_manual.rst:153
msgid ""
"Если файл был изменен или удален, но его необходимо восстановить (до "
"состояния, зафиксированного последним коммитом), следует использовать "
"команду:"
msgstr ""
"If the file was changed or deleted but it is necessary to recover it (to the"
" latest commited state) use the command:"

#: ../git_short_manual.rst:160
msgid ""
"Внесенные изменения будут отменены, поэтому эту команду необходимо выполнять"
" с осторожностью."
msgstr ""
"The introduced changes will be cancelled - this is why this command should "
"be performed with caution."

#: ../git_short_manual.rst:164
msgid "Посторонние файлы"
msgstr "Unwanted files"

#: ../git_short_manual.rst:166
msgid ""
"Если файл значится в списке ``Untracked files`` (команда ``git status``), но"
" контроль версий для него не нужен, его следует удалить или переместить за "
"пределы рабочей директории."
msgstr ""
"If a file is listed in the ``Untracked files`` (``git status``), but version"
" control is not needed for it, it should be deleted or moved beyond the "
"working directory."

#: ../git_short_manual.rst:171
msgid "добавление и удаление файлов"
msgstr "adding and removing files"

#: ../git_short_manual.rst:176
msgid "Подготовка к коммиту"
msgstr "Preparing for Commit"

#: ../git_short_manual.rst:179
msgid "Добавление файлов"
msgstr "Adding files"

#: ../git_short_manual.rst:181
msgid ""
"Если изменения устраивают, добавить нужные измененные и/или новые файлы для "
"коммита:"
msgstr ""
"If you are happy with the changes, add the needed changed and/or new files "
"for commit."

#: ../git_short_manual.rst:188
msgid "Снова проверить статус:"
msgstr "Check the status again:"

#: ../git_short_manual.rst:194
msgid ""
"Возможный результат команды ``git status`` после добавления некоторых файлов"
" командой ``git add``:"
msgstr ""
"Possible result of the ``git status`` command after adding some files with "
"the ``git add`` command:"

#: ../git_short_manual.rst:212
msgid ""
"Видно, что для коммита добавлены файлы "
":file:`apps_dev/firstperson/firstperson.js` и :file:`123.txt`, а файл "
":file:`doc_src/git_short_manual.rst` остался недобавленным. Для упрощения "
"работы рекомендуется либо добавлять такие файлы для коммита, либо "
"отбрасывать их изменения командой ``git checkout``."
msgstr ""
"You can see that the :file:`apps_dev/firstperson/firstperson.js` and "
":file:`123.txt` files were added for commit and the "
":file:`doc_src/git_short_manual.rst` file was not added. To make things "
"easier it is recommended to either add such files for commit or cancel their"
" changes with the ``git checkout`` command."

#: ../git_short_manual.rst:215
msgid "Удаление файлов"
msgstr "Removing files"

#: ../git_short_manual.rst:217
msgid ""
"Некоторые файлы могут быть отмечены как удаленные из Git после выполнения "
"команды ``git status``, например:"
msgstr ""
"Some files can be marked as deleted from Git after performing the ``git "
"status`` command, for example:"

#: ../git_short_manual.rst:232
msgid ""
"В таком случае, если удаление файла должно быть зафиксировано (т.е. войти в "
"коммит), выполнить команду ``git rm``, например:"
msgstr ""
"In this case if deleting the file should be recorded (i.e. enter the "
"commit), perform the ``git rm`` command, for example:"

#: ../git_short_manual.rst:238
msgid ""
"Если же файл был удален по ошибке, и его необходимо вернуть, нужно "
"использовать команду ``git checkout``."
msgstr ""
"If the file was deleted by accident and its necessary to recover it, use the"
" ``git checkout`` command."

#: ../git_short_manual.rst:241
msgid "коммит"
msgstr "commit"

#: ../git_short_manual.rst:246
msgid "Коммит"
msgstr "Commit"

#: ../git_short_manual.rst:248
msgid "Выполнить коммит командой:"
msgstr "Perform commit with the command:"

#: ../git_short_manual.rst:254
msgid ""
"Появится окно текстового редактора (например, **nano** или **vim**), в "
"котором нужно ввести комментарий к коммиту на английском языке."
msgstr ""
"A text editor window will show up (for example, **nano** or **vim**), in "
"which it's nesessary to enter the commit comment in English."

#: ../git_short_manual.rst:280
msgid ""
"Сохранить изменения и выйти из редактора (в **nano** Ctrl+O, затем Ctrl+X; в"
" **vim** ZZ, или ESC :wq)."
msgstr ""
"Save the changes and quit the editor (in **nano** Ctrl+O, then Ctrl+X; in "
"**vim** ZZ, or ESC :wq)."

#: ../git_short_manual.rst:282
msgid ""
"После совершения коммита рекомендуется снова проверить статус. Коммит "
"совершен правильно, если команда ``git status`` отображает ``nothing to "
"commit, working directory clean``."
msgstr ""
"After commit it's recommended to recheck the status. Commit is performed "
"correctly if the ``git status`` command returns ``nothing to commit, working"
" directory clean``."

#: ../git_short_manual.rst:286
msgid "синхронизация между репозиториями"
msgstr "synchronization between repositories"

#: ../git_short_manual.rst:291
msgid "Синхронизация между репозиториями"
msgstr "Syncing Between Repositories"

#: ../git_short_manual.rst:294
msgid "Из удаленного - в локальный"
msgstr "From the remote - to the local"

#: ../git_short_manual.rst:296
msgid ""
"После того как все коммиты сделаны, необходимо загрузить изменения из "
"удаленного (\"общего\") репозитория в локальный:"
msgstr ""
"After all the commits are performed it's nesessary to load the changes from "
"the remote (\"shared\") repository to the local one:"

#: ../git_short_manual.rst:302
msgid ""
"Результат команды ``git pull``, если в удаленном репозитории нет изменений:"
msgstr ""
"Result of the ``git pull`` command if there are no changes in the remote "
"repository:"

#: ../git_short_manual.rst:308
msgid ""
"Результат команды ``git pull``, если в удаленном репозитории были изменения,"
" и синхронизация прошла успешно:"
msgstr ""
"Result of the ``git pull`` command if the remote repository contains changes"
" and syncing was successful:"

#: ../git_short_manual.rst:330
msgid ""
"При желании можно посмотреть, какие изменения были внесены коллегами, "
"командой:"
msgstr ""
"If you wish it's possible to look up the changes made by your collegues "
"using the following command:"

#: ../git_short_manual.rst:336
msgid ""
"Параметр этой команды - в данном случае dbf3877..9f9700c - указывает, между "
"какими именно коммитами просматриваются изменения. Этот параметр удобно "
"выделить в результатах команды ``git pull`` и вставить щелчком мыши (средняя"
" кнопка) в консоли в нужном месте."
msgstr ""
"The parameter of this command - in this case dbf3877..9f9700c - shows "
"between which commits exactly the changes were made. This parameter can be "
"conveniently selected in the console in the ``git pull`` results and pasted "
"with a mouse click (middle button) where you need."

#: ../git_short_manual.rst:339
msgid "Также можно просмотреть лог изменений:"
msgstr "You can also view the changelog:"

#: ../git_short_manual.rst:346
msgid ""
"Команда ``git pull`` не всегда приводит в успешной синхронизации. Результат "
"команды ``git pull`` в случае наличия конфликтов:"
msgstr ""
"The ``git pull`` command does not always lead to a successful "
"synchronization. The result of ``git pull`` when there are conflicts:"

#: ../git_short_manual.rst:363
msgid "Порядок действий при возникновении конфликтов описан далее."
msgstr "The steps to be taken at conflicts are described below."

#: ../git_short_manual.rst:368
msgid "Из локального - в удаленный"
msgstr "From the local - to the remote"

#: ../git_short_manual.rst:370
msgid ""
"Затем нужно загрузить изменения из локального репозитория в удаленный "
"(\"общий\"), чтобы локальные изменения стали доступными для коллег."
msgstr ""
"After that the changes should be uploaded from the local repository to the "
"remote (\"shared\") one to make the changes available for team mates."

#: ../git_short_manual.rst:376
msgid ""
"Результат команды ``git push``, если в удаленном репозитории уже есть все "
"локальные изменения:"
msgstr ""
"The result of the ``git push`` command if the remote repository already "
"contains all the local changes:"

#: ../git_short_manual.rst:382
msgid "Результат команды ``git push``, если синхронизация прошла успешно:"
msgstr ""
"The result of the ``git push`` command if synchronization was successful:"

#: ../git_short_manual.rst:394
msgid ""
"Результат команды ``git push``, если синхронизация не прошла, потому что "
"сначала не была выполнена команда ``git pull``:"
msgstr ""
"The result of the ``git push`` command if synchronization was not successful"
" because the ``git pull`` command was not executed first:"

#: ../git_short_manual.rst:405
msgid "Необходимо выполнить команду ``git pull``."
msgstr "You should execute the ``git pull`` command."

#: ../git_short_manual.rst:407
msgid ""
"Изменения, загруженные в центральный репозиторий, могут быть получены "
"другими участниками разработки с помощью команды ``git pull``."
msgstr ""
"The changes uploaded into the central repository can be received by other "
"developers with the ``git pull`` command."

#: ../git_short_manual.rst:411
msgid "разрешение конфликтов"
msgstr "resolving conflicts"

#: ../git_short_manual.rst:414
msgid "Разрешение конфликтов"
msgstr "Resolving Conflicts"

#: ../git_short_manual.rst:419
msgid "Конфликты синхронизации происходят, если выполнены оба условия"
msgstr "Synchronization conflicts occur if both conditions are met"

#: ../git_short_manual.rst:421
msgid ""
"один и тот же файл был изменен как в локальном, так и в удаленном "
"репозитории, и"
msgstr ""
"the same file was changed both in the local and remote repositories, and"

#: ../git_short_manual.rst:422
msgid ""
"автоматическое слияние изменений не произошло, поскольку изменения находятся"
" в одном и том же месте файла."
msgstr ""
"automatic merging of the changes didn't occur because the changes are in the"
" same place of the file."

#: ../git_short_manual.rst:424
msgid "Типичные случаи:"
msgstr "Typical cases:"

#: ../git_short_manual.rst:426
msgid ""
"бинарный файл (текстура, blend-файл) независимо изменен двумя участниками "
"разработки"
msgstr ""
"a binary file (texture, blend file) was independently changed by two "
"developers"

#: ../git_short_manual.rst:427
msgid "в текстовой файл в одной и той же строке были внесены разные изменения"
msgstr ""
"different changes were introduced to the same line of the same text file"

#: ../git_short_manual.rst:428
msgid ""
"один участник разработки изменил файл, а другой - переместил его и т.п."
msgstr ""
"one developer has changed the file while the other has moved it and so on."

#: ../git_short_manual.rst:430
msgid ""
"Хотя конфликты синхронизации - нормальное явление, слишком частое их "
"возникновение замедляет работу. Рекомендуется ставить коллег в известность о"
" начале работ с общими бинарными файлами, а также чаще проводить "
"синхронизацию. Необходимо эффективно распределять работу между участниками "
"разработки, чтобы таких общих файлов было как можно меньше. Этого можно "
"добиться, в частности, подключением всех ресурсов сцены (linking) из "
"отдельных blend-файлов в один мастер-файл."
msgstr ""
"Although synchronization conflicts are normal, if they happen too often it "
"slows down the work. It is recommended to notify your team mates about start"
" of working with the shared binary files, and also to perform "
"synchronization more often. It is nesessary to effectively distribute the "
"work between developers to reduce the number of such shared files. This can "
"be achieved particularly through linking of all the scene's resources from "
"the separate blend files into the master file."

#: ../git_short_manual.rst:434
msgid "Порядок действий"
msgstr "The steps to be taken"

#: ../git_short_manual.rst:436
msgid ""
"Не рекомендуется производить какие-либо действия с файлами (изменять, "
"удалять), пока репозиторий находится в конфликтном состоянии."
msgstr ""
"It's not recommended to perform any files operations (modifying, deleting) "
"while the repository is in a conflict state."

#: ../git_short_manual.rst:438
msgid "Первое что необходимо сделать - выполнить команду ``git status``."
msgstr "The first thing to do is to perform the ``git status`` command."

#: ../git_short_manual.rst:453
msgid "Список конфликтующих файлов отображен в разделе ``Unmerged paths``."
msgstr ""
"A list of conflicting files can be found in the ``Unmerged paths`` section."

#: ../git_short_manual.rst:455
msgid "Дальнейший порядок действий различен для бинарных и текстовых файлов."
msgstr ""
"The order of the following steps is different for binary and text files."

#: ../git_short_manual.rst:458
msgid "Бинарные файлы"
msgstr "Binary files"

#: ../git_short_manual.rst:460
msgid ""
"На данном этапе конфликтующие бинарные файлы находятся в том состоянии, в "
"котором они находились в локальном репозитории до попытки синхронизации. "
"Файлы полностью функциональны (например, открываются графическими "
"редакторами)."
msgstr ""
"At this stage the conflicting binary files are in the same state as they "
"were in the local repository before the synchronization attempt. The files "
"are fully functional (for example they can be opened by graphics editors)."

#: ../git_short_manual.rst:462
msgid ""
"В случае конфликта бинарных файлов необходимо выяснить с коллегами или "
"самостоятельно, какую из версий оставить, а какую отбросить. Выбор "
"осуществляется командой ``git checkout``."
msgstr ""
"In case of conflicting binary files it's necessary to sort out (with the "
"team mates or by yourself) which of the files should be left and which "
"should be discarded. Selecting can be performed with the ``git checkout`` "
"command."

#: ../git_short_manual.rst:464
msgid ""
"Выбрать локальную версию файла (**- -ours**). Его можно открыть и убедиться "
"в этом."
msgstr ""
"Select the local version of the file (**- -ours**). To make sure that it's "
"local you can open it."

#: ../git_short_manual.rst:470
msgid ""
"Выбрать удаленную версию файла (**- -theirs**). Его можно открыть и "
"убедиться в этом."
msgstr ""
"Select the remote version of the file (**- -theirs**). To make sure that "
"it's remote you can open it."

#: ../git_short_manual.rst:476
msgid "Снова выбрать локальную версию файла (**- -ours**)."
msgstr "Select the local version of the file again (**- -ours**)."

#: ../git_short_manual.rst:482
msgid ""
"В итоге необходимо остановиться на нужной версии файла. При угрозе потери "
"работы можно сохранить отбрасываемую версию файла вне репозитория."
msgstr ""
"Eventually you have to stick to the right version of the file. In case there"
" is a threat of loosing the work you may save the discarded file outside the"
" repository."

#: ../git_short_manual.rst:486
msgid "Текстовые файлы"
msgstr "Text files"

#: ../git_short_manual.rst:488
msgid ""
"На данном этапе в конфликтующие текстовые файлы Git'ом вносятся как "
"локальные, так и удаленные изменения одновременно, в особом формате. Такие "
"текстовые файлы как правило, не работоспособны."
msgstr ""
"At this stage Git introduces both local and remote changes to the "
"conflicting text files, in a special format. Such text files are not "
"workable as a rule."

#: ../git_short_manual.rst:490
msgid ""
"Пример. Один участник разработки изменил имя сцены с \"Blue Lizard\" на "
"\"Green Lizard\" в файле приложения и загрузил изменения в центральный "
"репозиторий. Другой участник разработки изменил в той же строке \"Blue "
"Lizard\" на \"Red Lizard\", совершил коммит и выполнил команду ``git pull``."
" В результате именно на этого участника ложится ответственность по "
"разрешению конфликта. В его файле приложения будут находиться строки:"
msgstr ""
"Example. One developer changed the scene name from \"Blue Lizard\" to "
"\"Green Lizard\" in the application file and uploaded the changes into the "
"central repository. Another developer changed \"Blue Lizard\" to \"Red "
"Lizard\" in the same line, performed commit and executed the ``git pull`` "
"command. As a result this very developer will be responsible for resolving "
"the conflict. The following lines will be present in his version of the "
"application file:"

#: ../git_short_manual.rst:500
msgid ""
"В случае конфликта текстовых файлов можно поступить следующим образом. "
"Файлы, содержащие исходный код, необходимо отредактировать с учетом или без "
"учета внесенных обеими сторонами изменений. В то же время экспортированные "
"текстовые файлы сцен (заканчивающиеся на **.json**) проще повторно "
"экспортировать."
msgstr ""
"In case of conflicting text files the following steps can be taken. Files "
"with source code should be edited with or without respect to the changes "
"introduced by both parties. On the other hand, it is easier to reexport the "
"exported scene text files (ending with **.json**)."

#: ../git_short_manual.rst:504
msgid "Корректирующий коммит"
msgstr "Correcting commit"

#: ../git_short_manual.rst:506
msgid ""
"После выбора нужных файлов или редактирования изменений, добавить их для "
"коммита:"
msgstr ""
"After selecting the required files or editing the changes, add them for "
"commit:"

#: ../git_short_manual.rst:513
msgid ""
"Возможный результат выполнения ``git status`` после добавления конфликтующих"
" файлов для коммита:"
msgstr ""
"Possible result of ``git status`` command after adding the conflicting files"
" for commit:"

#: ../git_short_manual.rst:523
msgid ""
"Выполнить коммит, комментарий рекомендуется оставить предложенный по "
"умолчанию:"
msgstr "Perform commit. It is recommended to leave the default comment:"

#: ../git_short_manual.rst:537
msgid ""
"Конфликты разрешены, изменения из удаленного репозитория успешно применены в"
" локальном репозитории. Теперь изменения в локальном репозитории, - "
"включающие только что разрешенный конфликт, - можно загрузить в удаленный "
"репозиторий командой ``git push``."
msgstr ""
"Conflicts are resolved, the changes from the remote repository are "
"successfully applied in the local repository. Now the changes in the local "
"repository - including the just resolved conflict - can be uploaded to the "
"remote repository with the ``git push`` command."

#: ../git_short_manual.rst:541
msgid "тэги"
msgstr "tags"

#: ../git_short_manual.rst:546
msgid "Тэги"
msgstr "Tags"

#: ../git_short_manual.rst:548
msgid ""
"Тэги (метки) предназначены для указания на определенный коммит, например, с "
"целью обозначения стабилизированной версии продукта."
msgstr ""
"Tags are intended for pointing at a certain commit, for example, to specify "
"a stable product version."

#: ../git_short_manual.rst:550
msgid "Просмотреть список тэгов:"
msgstr "View the list of tags:"

#: ../git_short_manual.rst:557
msgid ""
"Создать тэг для релиза от 3 июня 2013 г., указывающий на коммит со "
"стабильной версией проекта:"
msgstr ""
"Create a tag for the release from June 3, 2013, pointing to the commit with "
"a stable product version:"

#: ../git_short_manual.rst:564
msgid "Просмотреть информацию о коммите тэга:"
msgstr "Check the commit tag information:"

#: ../git_short_manual.rst:571
msgid "Перейти к тэгу..."
msgstr "Roll back to the tag..."

#: ../git_short_manual.rst:578
msgid "...и вернуться:"
msgstr "...and return:"

#: ../git_short_manual.rst:585
msgid "Синхронизировать тэги с удаленным репозиторием:"
msgstr "Synchronize the tags with the remote repository:"

#: ../git_short_manual.rst:592
msgid "Удалить тэг (при ошибочном создании):"
msgstr "Delete the tag (if created by mistake):"

#: ../git_short_manual.rst:600
msgid "Другие полезные команды"
msgstr "Other Useful Commands"

#: ../git_short_manual.rst:602
msgid ""
"Просмотреть лог за январь 2012 г, показывать имена файлов, без коммитов "
"слияния:"
msgstr ""
"Check the log for January, 2012, show file names without merging commits:"
