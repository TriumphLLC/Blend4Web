var vec3;
vec3.create = function() {};
vec3.clone = function() {};
vec3.fromValues = function() {};
vec3.copy = function() {};
vec3.set = function() {};
vec3.add = function() {};
vec3.subtract = function() {};
vec3.sub = function() {};
vec3.multiply = function() {};
vec3.mul = function() {};
vec3.divide = function() {};
vec3.div = function() {};
vec3.min = function() {};
vec3.max = function() {};
vec3.scale = function() {};
vec3.scaleAndAdd = function() {};
vec3.distance = function() {};
vec3.dist = function() {};
vec3.squaredDistance = function() {};
vec3.sqrDist = function() {};
vec3.length = function() {};
vec3.len = function() {};
vec3.squaredLength = function() {};
vec3.sqrLen = function() {};
vec3.negate = function() {};
vec3.normalize = function() {};
vec3.dot = function() {};
vec3.cross = function() {};
vec3.lerp = function() {};
vec3.random = function() {};
vec3.transformMat4 = function() {};
vec3.transformMat3 = function() {};
vec3.transformQuat = function() {};
vec3.forEach = function() {};
vec3.str = function() {};
var vec4;
vec4.create = function() {};
vec4.clone = function() {};
vec4.fromValues = function() {};
vec4.copy = function() {};
vec4.set = function() {};
vec4.add = function() {};
vec4.subtract = function() {};
vec4.sub = function() {};
vec4.multiply = function() {};
vec4.mul = function() {};
vec4.divide = function() {};
vec4.div = function() {};
vec4.min = function() {};
vec4.max = function() {};
vec4.scale = function() {};
vec4.scaleAndAdd = function() {};
vec4.distance = function() {};
vec4.dist = function() {};
vec4.squaredDistance = function() {};
vec4.sqrDist = function() {};
vec4.length = function() {};
vec4.len = function() {};
vec4.squaredLength = function() {};
vec4.sqrLen = function() {};
vec4.negate = function() {};
vec4.normalize = function() {};
vec4.dot = function() {};
vec4.lerp = function() {};
vec4.random = function() {};
vec4.transformMat4 = function() {};
vec4.transformQuat = function() {};
vec4.forEach = function() {};
vec4.str = function() {};
var mat3;
mat3.create = function() {};
mat3.fromMat4 = function() {};
mat3.clone = function() {};
mat3.copy = function() {};
mat3.identity = function() {};
mat3.transpose = function() {};
mat3.invert = function() {};
mat3.adjoint = function() {};
mat3.determinant = function() {};
mat3.multiply = function() {};
mat3.mul = function() {};
mat3.translate = function() {};
mat3.rotate = function() {};
mat3.scale = function() {};
mat3.fromMat2d = function() {};
mat3.fromQuat = function() {};
mat3.normalFromMat4 = function() {};
mat3.str = function() {};
var mat4;
mat4.create = function() {};
mat4.clone = function() {};
mat4.copy = function() {};
mat4.identity = function() {};
mat4.transpose = function() {};
mat4.invert = function() {};
mat4.adjoint = function() {};
mat4.determinant = function() {};
mat4.multiply = function() {};
mat4.mul = function() {};
mat4.translate = function() {};
mat4.scale = function() {};
mat4.rotate = function() {};
mat4.rotateX = function() {};
mat4.rotateY = function() {};
mat4.rotateZ = function() {};
mat4.fromRotationTranslation = function() {};
mat4.fromQuat = function() {};
mat4.frustum = function() {};
mat4.perspective = function() {};
mat4.ortho = function() {};
mat4.lookAt = function() {};
mat4.str = function() {};
var quat;
quat.create = function() {};
quat.rotationTo = function() {};
quat.setAxes = function() {};
quat.clone = function() {};
quat.fromValues = function() {};
quat.copy = function() {};
quat.set = function() {};
quat.identity = function() {};
quat.setAxisAngle = function() {};
quat.add = function() {};
quat.multiply = function() {};
quat.mul = function() {};
quat.scale = function() {};
quat.rotateX = function() {};
quat.rotateY = function() {};
quat.rotateZ = function() {};
quat.calculateW = function() {};
quat.dot = function() {};
quat.lerp = function() {};
quat.slerp = function() {};
quat.invert = function() {};
quat.conjugate = function() {};
quat.length = function() {};
quat.len = function() {};
quat.squaredLength = function() {};
quat.sqrLen = function() {};
quat.normalize = function() {};
quat.fromMat3 = function() {};
quat.str = function() {};

